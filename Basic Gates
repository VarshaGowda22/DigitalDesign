// Basic gates - Data Flow Modeling (Continous Assignment)
// DUT
module gates(
input a, b,
output reg c,d,e,f,g,h,i
);
  
  assign c = ~a;    // NOT
  assign d = a & b; // AND
  assign e = a | b; // OR
  assign f = a ^ b; // XOR
  assign g = ~(a & b); //NAND
  assign h = ~(a | b); //NOR
  assign i = ~(a ^ b); //XNOR
  
endmodule


// Test Bench
`timescale 10ns/1ns
module gates_tb();
  reg a, b;
  wire c, d, e, f, g, h, i;
  
  gates GATES(.a(a), .b(b), .c(c), .d(d), .e(e), .f(f), .g(g), .h(h), .i(i) );
  
  initial begin
    a = 0;
    b = 0;
    #1;
    a = 0;
    b = 1;
    #1;
    a = 1;
    b = 0;
    #1;
    a = 1;
    b = 1;
    #1;
  end
  
  initial begin
    $display("Value of c is %b", c);
    $display("Value of d is %b", d);
    $display("Value of e is %b", e);
    $display("Value of f is %b", f); 
    $display("Value of g is %b", g);
    $display("Value of h is %b", h);  
    $display("Value of i is %b", i);   
    $monitor("value of a = %b, value of b = %b, value of c = %b, d = %b, e = %b, f = %b, g = %b, h = %b, a = %b", a, b, c, d, e, f, g, h, i);
    $dumpfile("dump.vcd");
    $dumpvars();
  end
endmodule
